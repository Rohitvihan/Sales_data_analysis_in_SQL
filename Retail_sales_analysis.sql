CREATE TABLE retail_sales
(
	transactions_id INT PRIMARY KEY,
	sale_date DATE,
	sale_time TIME,
	customer_id INT,
	gender VARCHAR(20),
	age INT,
	category VARCHAR(15),
	quantiy INT,
	price_per_unit FLOAT,
	cogs FLOAT,
	total_sale FLOAT
)
SELECT *FROM RETAIL_SALES;

SELECT COUNT(*) FROM RETAIL_SALES;

--DATA CLEANING
---------------
SELECT *FROM RETAIL_SALES
WHERE TRANSACTIONS_ID IS NULL 
OR SALE_DATE IS NULL
OR GENDER IS NULL
OR CATEGORY IS NULL
OR QUANTIY IS NULL
OR COGS IS NULL;

--DELETE
---------
DELETE FROM RETAIL_SALES
WHERE TRANSACTIONS_ID IS NULL 
OR SALE_DATE IS NULL
OR GENDER IS NULL
OR CATEGORY IS NULL
OR QUANTIY IS NULL
OR COGS IS NULL;

--DATA EXPLORATION
------------------

--(1)HOW MANY SALES WE HAVE?
SELECT COUNT(*) AS TOTAL_SALES
FROM RETAIL_SALES;

--(2)HOW MANY CUSTOMERS WE HAVE?
SELECT COUNT(customer_id) AS TOT_CUST
FROM RETAIL_SALES;

--(3)HOW MANY UNIQUE CUSTOMERS WE HAVE?
SELECT COUNT(DISTINCT customer_id) AS TOT_CUST
FROM RETAIL_SALES;

--(4)HOW MANY CATEGORIES WE HAVE?
SELECT DISTINCT category FROM RETAIL_SALES;


--DATA ANALYSIS//BUSINESS PROBLEMS & ANSWERS
--------------------------------------------

--(1)WRITE A SQL QUERY TO RETRIEVE ALL COLUMNS FOR SALES MADE ON '2022-11-05'.
SELECT *FROM RETAIL_SALES
WHERE SALE_DATE='2022-11-05'

--(2)WRITE A SQL QUERY TO RETRIEVE ALL TRANSACTIONS WHERE CATEGORY IS "CLOTHING"
--AND QUANTITY SOLD IS MORE THAN 4 IN THE MONTH OF NOV-2022.
SELECT *
FROM RETAIL_SALES
WHERE LOWER(category) = 'clothing'
  AND quantiy >=4
  AND sale_date>='2022-11-01'
  AND sale_date<='2022-11-30';

--(3)WRITE A SQL QUERY TO CALCULATE THE TOTAL SALES FOR EACH CATEGORY.
SELECT category,SUM(total_sale) AS TOT_SALS,COUNT(*) AS TOT_ORDERS
FROM RETAIL_SALES
GROUP BY category;

--(4)WRITE A SQL QUERY TO FIND THE AVG AGE OF CUSTOMER 
--WHO PURCHASED ITEMS FROM THE 'BEAUTY' CATEGORY.
SELECT ROUND(AVG(age),2) AS AVG_AGE
FROM retail_sales
WHERE LOWER(category)='beauty';

--(5)WRITE A SQL QUERY TO FIND ALL TRANSACTIONS WHERE THE 
--TOTAL_SALE IS GREATER THAN 1000.
SELECT COUNT(transactions_id) AS TOT_TRANS
FROM retail_sales
WHERE total_sale>1000;

--(6)WRITE A SQL QUERY TO FIND THE TOTAL NUMBER OF TRANSACTIONS
--MADE BY EACH GENDER IN EACH CATEGORY.
SELECT gender,category,COUNT(transactions_id) AS tot_trans
FROM retail_sales
GROUP BY gender,category;

--(7)WRITE A SQL QUERY TO CALCULATE THE AVG SALE FOR EACH
--MONTH.FIND OUT BEST SELLING MONTH IN EACH YEAR.
SELECT 
EXTRACT(YEAR FROM sale_date) AS YEAR,
EXTRACT(MONTH FROM sale_date) AS MONTH,
AVG(total_sale) AS AVG_SALE
FROM retail_sales
GROUP BY YEAR,MONTH
ORDER BY YEAR ASC,MONTH DESC;

--(8)WRITE A SQL QUERY TO FIND THE TOP 5 CUSTOMERS BASED 
--ON HIGHEST TOTAL SALES.
SELECT customer_id,SUM(total_sale) AS TOT_SLS
FROM retail_sales
GROUP BY customer_id
ORDER BY TOT_SLS DESC;

--(9)WRITE A SQL QUERY TO FIND THE NUMBER OF UNIQUE CUSTOMERS
--WHO PURCHASED ITEMS FROM EACH CATEGORY.
SELECT COUNT(DISTINCT customer_id) AS UNIQ_CUST,category
FROM retail_sales
GROUP BY category;

--(10)WRITE A SQL QUERY TO CREATE EACH SHIFT AND NUMBER 
--OF ORDERS IN EACH SHIFT(EXAMPLE MORNING <=12,AFTERNOON B/W 12 & 17,EVENING>17)
SELECT 
  CASE 
    WHEN EXTRACT(HOUR FROM sale_time) < 12 THEN 'Morning'
    WHEN EXTRACT(HOUR FROM sale_time) BETWEEN 12 AND 17 THEN 'Afternoon'
    ELSE 'Evening'
  END AS shift,
COUNT(*) AS number_of_orders
FROM retail_sales
GROUP BY shift;





